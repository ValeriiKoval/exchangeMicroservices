server:
  port: 8081


spring:
  redis:
    host: redis
    port: 6379
  application:
    name: API-GATEWAY
  cloud:
    gateway:
      routes:
        - id: AUTH-SERVICE
          uri: lb://AUTH-SERVICE
          predicates:
            - Path=/login
            - Path=/signup
            - Path=/token/**
            - Path=/verify/**
          filters:
            - name: CircuitBreaker
              args:
                name: AUTH-SERVICE
                fallbackuri: forward:/authServiceFallBack
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 1
                redis-rate-limiter.burstCapacity: 1
        - id: WALLET-SERVICE
          uri: lb://WALLET-SERVICE
          predicates:
            - Path=/wallet/**
          filters:
            - name: CircuitBreaker
              args:
                name: WALLET-SERVICE
                fallbackuri: forward:/walletServiceFallBack
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 1
                redis-rate-limiter.burstCapacity: 1
        - id: EXCHANGE-SERVICE
          uri: lb://EXCHANGE-SERVICE
          predicates:
            - Path=/exchange/**
          filters:
            - name: CircuitBreaker
              args:
                name: EXCHANGE-SERVICE
                fallbackuri: forward:/exchangeServiceFallBack
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 1
                redis-rate-limiter.burstCapacity: 1
        - id: ORDER-SERVICE
          uri: lb://ORDER-SERVICE
          predicates:
            - Path=/order/**
          filters:
            - name: CircuitBreaker
              args:
                name: ORDER-SERVICE
                fallbackuri: forward:/orderServiceFallBack
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 1
                redis-rate-limiter.burstCapacity: 1
eureka:
  instance:
    prefer-ip-address: true
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      defaultZone: ${EUREKA_SERVER_ADDRESS:http://localhost:8761/eureka}

logging:
  level:
    org.springframework: DEBUG

jwt:
  secret: mySecretKey